# automatically generated by the FlatBuffers compiler, do not modify

# namespace: foraging

import flatbuffers

class Action(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsAction(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Action()
        x.Init(buf, n + offset)
        return x

    # Action
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Action
    def IdAction(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Action
    def Prob(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def ActionStart(builder): builder.StartObject(2)
def ActionAddIdAction(builder, idAction): builder.PrependInt8Slot(0, idAction, 0)
def ActionAddProb(builder, prob): builder.PrependInt8Slot(1, prob, 0)
def ActionEnd(builder): return builder.EndObject()
